# Terminfo
#
# For some unknown reason, the builtin infocmp on macOS does not look at
# ~/.terminfo even TERMINFO is set.
# Therefore, it is necessary to install ncurses from Homebrew, and
# make it available in $PATH.
#
# And then we can either use the terminfo database that comes with ncurses, or
# install a new one at ~/.terminfo.
# To install a new one at ~/.terminfo, see :h terminfo in neovim.

# $TERM
#
# Program likes neovim has very strict requirement on the value being correct.
# iTerm2.app: $TERM=iterm2
# Terminal.app: $TERM=nsterm
# tmux: $TERM=tmux-256color
# alacritty: $TERM=alacritty

# Known issues
#
# Undercurl support is still missing with neovim + tmux + iTerm2.app.
# Undercurl is supported with neovim + iTerm2.app though.

# Kitty
#
# The author of kitty thinks tmux is no good.
# (https://github.com/kovidgoyal/kitty/issues/391#issuecomment-638320745)
# To me, tmux offers
# - Session restoration.
# - Multiple windows with keyboard shortcuts to navigate between them.
# - Splits in a window.

set-option -g prefix C-Space
set-option -g default-terminal "tmux-256color"
# According neovim :checkhealth, alacritty inside tmux requires this
set-option -g terminal-features "alacritty:RGB"
set-option -s escape-time 0
set-option -g focus-events on

# Make tmux behave like Terminal.app
set-option -g mouse on
# Do nothing when we stop dragging.
unbind-key -T copy-mode-vi MouseDragEnd1Pane
# Do nothing with a left click down.
unbind-key -T copy-mode-vi MouseDown1Pane
# Clear the selection with a left click up.
bind-key -T copy-mode-vi MouseUp1Pane send-keys -X clear-selection
# Cancel without copy with a Enter.
bind-key -T copy-mode-vi Enter send-keys -X cancel
# We do not use triple click.
unbind-key -T root TripleClick1Pane
unbind-key -T copy-mode-vi TripleClick1Pane
# Select word with a double click.
bind-key -T root DoubleClick1Pane select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" { send-keys -M } { copy-mode ; send-keys -X select-word }
bind-key -T copy-mode-vi DoubleClick1Pane select-pane \; send-keys -X select-word

# create window and pane in current directory
bind-key c new-window -c "#{pane_current_path}"
bind-key % split-window -h -c "#{pane_current_path}"
bind-key '"' split-window -v -c "#{pane_current_path}"

# Swap window
# bind-key -n C-H swap-window -t -1
# bind-key -n C-L swap-window -t +1

# vim key bindings
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-no-clear "pbcopy"
bind-key ] run-shell 'pbpaste | tmux load-buffer - \; paste-buffer -d'
bind-key -r k select-pane -U
bind-key -r j select-pane -D
bind-key -r h select-pane -L
bind-key -r l select-pane -R

set-option -g status-interval 5
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

bind-key R run-shell 'tmux source-file ~/.tmux.conf; tmux display-message "Sourced"'
