set-option -g prefix C-Space

# The most correct way to use RGB is
# - Use a terminal emulator that supports RGB, e.g. iTerm2.
# - Set $TERM to {terminal-name}-direct, e.g. iterm2-direct.
#   This advertises to other programs the full capabilities
#   supported by this terminal emulator.
#   This may break some programs that use their own copy of ncurses,
#   whose ncurses version is too old to understand the capabilities.
#   One notable example is `less`.
#   The vanilla `less` that comes with macOS will complain about
#   "WARNING: terminal is not fully functional"
# - Install a RGB colorscheme for the terminal emulator.
# - If the shell supports RGB (e.g. fish), install a RGB colorscheme for it.
#
# I have tested tmux with iTerm2 and Alacritty.
#
# With iTerm2, we do not need workarounds like $HOME/.terminfo, terminal-overrides, terminal-features, etc.
# Only need to set default-terminal to "tmux-direct".
#
# With Alacritty, the following have been tried:
# - Set $TERM to "alacritty" and terminal-overrides ",alacritty:RGB".
#   RGB seems almost correct, but the cursor background color is wrong in nvim.
# - Set $TERM to "alacritty-direct".
#   `pastel colorcheck` reports RGB has problem.
# - Modify terminfo.src and create "alacritty-fixed" which use=xterm+direct.
#   `pastel colorcheck` reports RGB has problem.
# Plus, Alacritty does not scroll tmux window like iTerm2 does.
#
# The author of kitty thinks tmux is no good.
# (https://github.com/kovidgoyal/kitty/issues/391#issuecomment-638320745)
# To me, tmux offers
# - Session restoration.
# - Multiple windows with keyboard shortcuts to navigate between them.
# - Splits in a window.
set-option -g default-terminal "tmux-direct"
set-option -s escape-time 0
set-option -g focus-events on
# Setting mouse on enables mouse mode.
# But I can no longer use mouse features provided by the terminal emulator
# set-option -g mouse on

# create window and pane in current directory
unbind-key c
bind-key c new-window -c "#{pane_current_path}"
unbind-key %
bind-key % split-window -h -c "#{pane_current_path}"
unbind-key '"'
bind-key '"' split-window -v -c "#{pane_current_path}"

# Swap window
# bind-key -n C-H swap-window -t -1
# bind-key -n C-L swap-window -t +1

# vim key bindings
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
unbind-key ]
bind-key ] run-shell 'pbpaste | tmux load-buffer - \; paste-buffer -d'
bind-key -r k select-pane -U
bind-key -r j select-pane -D
bind-key -r h select-pane -L
unbind-key l
bind-key -r l select-pane -R

set-option -g status-interval 5
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

bind-key R run-shell 'tmux source-file ~/.tmux.conf; tmux display-message "Sourced"'
