# tmux 3.5 added support for extended-keys-format.
# nvim supports "CSI u" and it will use it first when it detects the terminal supports it.
# So we set extended-keys-format to "CSI u".
# https://raw.githubusercontent.com/tmux/tmux/3.5/CHANGES
set-option -g extended-keys on
set-option -g extended-keys-format csi-u

set-option -g default-command "exec ${SHELL}"

# alacritty offers two terminfo, namely, alacritty and alacritty-direct.
# When alacritty-direct is used, it supports RGB out-of-the-box, but
# it confuses fish shell. The problem is the text color of autosuggetion becomes black.
# When alacritty is used, tmux does not recognized alacritty supports RGB.
# So the following line tells tmux alacritty DOES support RGB.
set-option -sa terminal-features ",alacritty:RGB"

# Show display message for 2s.
set-option -g display-time 2000
# A longer repeat-time. The default is 500ms.
set-option -g repeat-time 1000

set-option -g renumber-windows on

# Do nothing when we stop dragging.
unbind-key -T copy-mode-vi MouseDragEnd1Pane
# Do nothing with a left click down.
unbind-key -T copy-mode-vi MouseDown1Pane
# Clear the selection with a left click up.
bind-key -T copy-mode-vi MouseUp1Pane send-keys -X clear-selection
# Stop selection when we scroll.
# Without this, scroll when there is a selection will expand the selection.
bind-key -T copy-mode-vi WheelUpPane select-pane \; send-keys -X stop-selection \; send-keys -X -N 5 scroll-up
bind-key -T copy-mode-vi WheelDownPane select-pane \; send-keys -X stop-selection \; send-keys -X -N 5 scroll-down
# Cancel without copy with a Enter or an Escape.
bind-key -T copy-mode-vi Enter send-keys -X cancel
bind-key -T copy-mode-vi Escape send-keys -X cancel
# We do not use triple click.
unbind-key -T root TripleClick1Pane
unbind-key -T copy-mode-vi TripleClick1Pane
# Select word with a double click.
bind-key -T root DoubleClick1Pane select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" { send-keys -M } { copy-mode ; send-keys -X select-word }
bind-key -T copy-mode-vi DoubleClick1Pane select-pane \; send-keys -X select-word

# create window and pane in current directory
bind-key c new-window -c "#{pane_current_path}"
bind-key % split-window -h -c "#{pane_current_path}"
bind-key '"' split-window -v -c "#{pane_current_path}"

# Swap window
bind-key -r C-h swap-window -d -t -1
bind-key -r C-l swap-window -d -t +1

# Navigate window
bind-key -r C-n next-window
bind-key -r C-p previous-window

# vim key bindings
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-on
# Copy without trailing newline.
# This is like kitty's `strip_trailing_spaces always`.
# Ideally, we should use the following to implement strip_trailing_spaces smart. But I have no idea
# why the else statement never get executed.
#bind-key -T copy-mode-vi y if-shell -F "#{selection_active}" { send-keys -X copy-pipe-no-clear "pbcopy" \; display-message "Copied with newline" } { send-keys -X copy-pipe-no-clear "perl -pe 'chomp if eof' | pbcopy" \; display-message "Copied without newline" }
bind-key -T copy-mode-vi y send-keys -X copy-pipe-no-clear "perl -pe 'chomp if eof' | pbcopy" \; display-message "Copied without newline"

# <Leader>+space to view the current pane scrollback.
# We first capture the full range (-S and -E) of the current pane with color (-e) and save it to a file (-p)
# And then we create a new tmux window to run nvim as the default-command.
# When nvim exits, the window closes itself, no cleanup is needed.
# We cannot run nvim directly in run-shell because run-shell wait for the command the finishes.
# If it does not finish, it hangs indefinitely.
bind-key Space run-shell "tmux capture-pane -pe -S - -E - >/tmp/tmux-scrollback.txt; tmux new-window \"nvim --cmd 'let g:pager_enabled = 1' +Scrollback /tmp/tmux-scrollback.txt\""

set-option -g status-interval 5
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

bind-key R run-shell 'tmux source-file ~/.tmux.conf; tmux display-message "Sourced"'
